version: "3.4"

services:
  ######### REDIS ############
  redis:
    container_name: redis
    restart: always
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
  ####### POSTGRES #########    
  postgres:
    container_name: postgres
    image: postgres:9.5
    restart: always
    environment:
      - "POSTGRES_USER=pg"
      - "POSTGRES_PASSWORD=pass"
      - "POSTGRES_DB=crud"
      - "POSTGRES_HOST=5432"
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data 
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend  

  ######### PGADMIN ##########
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: root@admin.com
      PGADMIN_DEFAULT_PASSWORD: root    
    ports:
     - "5050:80"  

  ######### Zookeeper ########   
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes 
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend   
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://0.0.0.0:29092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://0.0.0.0:29092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper  
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend  
 
volumes:
  db:
   driver: local
networks:
  backend:   
    driver: bridge