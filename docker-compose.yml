version: "3.4"

services:
  ######### REDIS ############
  redis:
    container_name: redis
    restart: always
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
  ####### POSTGRES #########    
  postgres:
    container_name: postgres
    image: postgres:9.5
    restart: always
    environment:
      - "POSTGRES_USER=pg"
      - "POSTGRES_PASSWORD=pass"
      - "POSTGRES_DB=crud"
      - "POSTGRES_HOST=5432"
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data 
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend  
  ######## MONGODB #########
  mongodb_container:
    container_name: mongo
    image: mongo:5.0.7
    
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    volumes:
      - mongo_db:/data/db

  ######### PGADMIN ##########
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: root@admin.com
      PGADMIN_DEFAULT_PASSWORD: root    
    ports:
     - "5050:80"  

  #######  zookeeper and kafka setup ######
  zookeeper:
    container_name: zookeeper_container
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
 
  
  kafka:
    container_name: kafka_container
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
   
 
volumes:
  db:
   driver: local
networks:
  backend:   
    driver: bridge